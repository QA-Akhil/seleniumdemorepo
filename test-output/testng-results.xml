<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-05T05:31:55 BST" name="Suite" finished-at="2022-08-05T05:32:26 BST" duration-ms="31789">
    <groups>
    </groups>
    <test started-at="2022-08-05T05:31:55 BST" name="TestTwo" finished-at="2022-08-05T05:32:04 BST" duration-ms="9255">
      <class name="tests.TestTwo">
        <test-method signature="testtwomethod()[pri:0, instance:tests.TestTwo@6c1a5b54]" started-at="2022-08-05T05:31:55 BST" name="testtwomethod" finished-at="2022-08-05T05:32:04 BST" duration-ms="9225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtwomethod -->
      </class> <!-- tests.TestTwo -->
    </test> <!-- TestTwo -->
    <test started-at="2022-08-05T05:31:55 BST" name="TestThree" finished-at="2022-08-05T05:32:05 BST" duration-ms="10284">
      <class name="tests.TestThree">
        <test-method signature="testthreemethod()[pri:0, instance:tests.TestThree@1a942c18]" started-at="2022-08-05T05:31:55 BST" name="testthreemethod" finished-at="2022-08-05T05:32:05 BST" duration-ms="10256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testthreemethod -->
      </class> <!-- tests.TestThree -->
    </test> <!-- TestThree -->
    <test started-at="2022-08-05T05:31:55 BST" name="TestFour" finished-at="2022-08-05T05:32:05 BST" duration-ms="10583">
      <class name="tests.TestFour">
        <test-method signature="testfourmethod()[pri:0, instance:tests.TestFour@d86a6f]" started-at="2022-08-05T05:31:55 BST" name="testfourmethod" finished-at="2022-08-05T05:32:05 BST" duration-ms="10187" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at tests.TestFour.testfourmethod(TestFour.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfourmethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestFour@d86a6f]" started-at="2022-08-05T05:32:05 BST" name="tearDown" finished-at="2022-08-05T05:32:05 BST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestFour -->
    </test> <!-- TestFour -->
    <test started-at="2022-08-05T05:31:55 BST" name="TestLogin" finished-at="2022-08-05T05:32:26 BST" duration-ms="31789">
      <class name="tests.LoginTestDataDriven">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTestDataDriven@43dac38f]" started-at="2022-08-05T05:31:55 BST" name="openApplication" finished-at="2022-08-05T05:32:04 BST" duration-ms="9156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTestDataDriven@43dac38f]" started-at="2022-08-05T05:32:04 BST" name="login" data-provider="getLoginData" finished-at="2022-08-05T05:32:09 BST" duration-ms="4917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun.selenium@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Second@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTestDataDriven@43dac38f]" started-at="2022-08-05T05:32:09 BST" name="tearDown" finished-at="2022-08-05T05:32:09 BST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTestDataDriven@43dac38f]" started-at="2022-08-05T05:32:09 BST" name="openApplication" finished-at="2022-08-05T05:32:12 BST" duration-ms="3024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTestDataDriven@43dac38f]" started-at="2022-08-05T05:32:12 BST" name="login" data-provider="getLoginData" finished-at="2022-08-05T05:32:26 BST" duration-ms="14528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dummy@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTestDataDriven@43dac38f]" started-at="2022-08-05T05:32:26 BST" name="tearDown" finished-at="2022-08-05T05:32:26 BST" duration-ms="92" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTestDataDriven -->
    </test> <!-- TestLogin -->
  </suite> <!-- Suite -->
</testng-results>
